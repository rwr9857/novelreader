CREATE USER novelreader IDENTIFIED BY 1234;
GRANT CONNECT, RESOURCE TO novelreader;

ALTER SESSION SET CURRENT_SCHEMA = novelreader;

CREATE TABLE MEMBER (
	M_NUM NUMBER(8) PRIMARY KEY,
	M_ID VARCHAR2(40) UNIQUE,
	M_PW VARCHAR2(20),
	M_EMAIL VARCHAR2(40),
	M_EMAIL_AGREE NUMBER(1),
	M_NICKNAME VARCHAR2(20) UNIQUE,
	M_SEX VARCHAR2(10),
	M_HOMEPAGE_ADDRESS VARCHAR2(100),
	M_CITY VARCHAR2(20),
	M_REGISTER_DATE DATE,
	M_PERMISSION VARCHAR2(10),
	M_PHOTO_NAME VARCHAR2(500),
	M_PHOTO_PATH VARCHAR2(1000),
	M_PHOTO_SIZE LONG,
	M_INFO VARCHAR2(200),
	M_BIRTHDAY DATE,
	M_HOMEPAGE_PUBLIC NUMBER(1),
	M_SEX_PUBLIC NUMBER(1),
	M_CITY_PUBLIC NUMBER(1),
	M_BIRTHDAY_PUBLIC NUMBER(1),
	M_INFO_PUBLIC NUMBER(1),
	M_PLATFORM VARCHAR2(20),
	M_SNS_ID VARCHAR2(500)
);

CREATE TABLE NOVEL_HOME (
	N_NUM NUMBER(8) PRIMARY KEY,
	N_TITLE VARCHAR2(4000),
	N_SUMMARY VARCHAR2(1000),
	N_IMAGE_NAME VARCHAR2(500),
	N_IMAGE_PATH VARCHAR2(1000),
	N_IMAGE_SIZE LONG,
	N_PUB_DATE DATE,
	N_REPORT NUMBER(2),
	M_NUM NUMBER(8),
	FOREIGN KEY (M_NUM) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE
);

CREATE TABLE NOVEL_POST (
	N_POST_NUM NUMBER(8) PRIMARY KEY,
	N_NUM NUMBER(8),
	N_POST_TITLE VARCHAR2(50),
	N_POST_CONTENT VARCHAR2(4000),
	N_POST_LIKE NUMBER(8),
	N_POST_DISLIKE NUMBER(8),
	N_POST_VIEWCOUNT NUMBER(8),
	N_POST_TIME DATE,
	FOREIGN KEY (N_NUM) REFERENCES NOVEL_HOME(N_NUM) ON DELETE CASCADE
);

CREATE TABLE COMMENTS (
	COMMENT_NUM NUMBER(10) PRIMARY KEY,
	M_NUM NUMBER(8),
	N_POST_NUM NUMBER(8),
	COMMENT_CONTENT VARCHAR(1000),
	COMMENT_TIME DATE,
	FOREIGN KEY (M_NUM) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE,
	FOREIGN KEY (N_POST_NUM) REFERENCES NOVEL_POST(N_POST_NUM) ON DELETE CASCADE
);

CREATE TABLE FOLLOW (
	M_NUM NUMBER(8),
	FOLLOWING NUMBER(8),
	FOLLOWING_TIME DATE,
	FOREIGN KEY (M_NUM) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE,
	FOREIGN KEY (FOLLOWING) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE
);

CREATE TABLE QUESTION (
	Q_NUM NUMBER(8) PRIMARY KEY,
	M_NUM NUMBER(8),
	Q_TITLE VARCHAR(100),
	Q_CONTENT VARCHAR(1000),
	Q_VIEWCOUNT NUMBER(8),
	Q_TIME DATE,
	Q_CATEGORY VARCHAR(50),
	FOREIGN KEY (M_NUM) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE
);

CREATE TABLE QUESTION_REPLY (
	QR_NUM NUMBER(8) PRIMARY KEY,
	M_NUM NUMBER(8),
	QR_TITLE VARCHAR(100),
	QR_CONTENT VARCHAR(1000),
	QR_TIME DATE,
	FOREIGN KEY (M_NUM) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE
);

CREATE TABLE NOTICE (
	NOT_NUM NUMBER(8) PRIMARY KEY,
	M_NUM NUMBER(8),
	NOT_TITLE VARCHAR(100),
	NOT_CONTENT VARCHAR(1000),
	NOT_VIEWCOUNT NUMBER(8),
	NOT_TIME DATE,
	FOREIGN KEY (M_NUM) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE
);

CREATE TABLE FAQ (
	FAQ_NUM NUMBER(8) PRIMARY KEY,
	M_NUM NUMBER(8),
	FAQ_TITLE VARCHAR(100),
	FAQ_CONTENT VARCHAR(1000),
	FAQ_VIEWCOUNT NUMBER(8),
	FAQ_TIME DATE,
	FOREIGN KEY (M_NUM) REFERENCES MEMBER(M_NUM) ON DELETE CASCADE
);

CREATE TABLE CATEGORY (
	C_CATEGORY_ID NUMBER(8) PRIMARY KEY,
	C_CATEGORY_NAME VARCHAR2(50)
);

CREATE TABLE NOVEL_CATEGORY (
	C_CATEGORY_ID NUMBER(8),
	N_NUM NUMBER(8),
	FOREIGN KEY (C_CATEGORY_ID) REFERENCES CATEGORY(C_CATEGORY_ID) ON DELETE CASCADE,
	FOREIGN KEY (N_NUM) REFERENCES NOVEL_HOME(N_NUM) ON DELETE CASCADE
);

-- CREATE SEQUENCE
CREATE SEQUENCE C_CATEGORY_ID_SEQ;
CREATE SEQUENCE M_NUM_SEQ;
CREATE SEQUENCE N_NUM_SEQ;
CREATE SEQUENCE Q_NUM_SEQ;
CREATE SEQUENCE COMMENT_NUM_SEQ;
CREATE SEQUENCE QR_NUM_SEQ;
CREATE SEQUENCE NOT_NUM_SEQ;
CREATE SEQUENCE FAQ_NUM_SEQ;
CREATE SEQUENCE N_POST_NUM_SEQ;
